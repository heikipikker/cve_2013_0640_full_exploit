#include "file_stream.h"
#include <memory>

FileStream* FileStream::Get(){
	static FileStream* r_interface = nullptr;
	if(r_interface==nullptr){
		static std::tr1::shared_ptr<FileStream> share;
		r_interface = reinterpret_cast<FileStream*>(&share);
	}
	return r_interface;
}

bool FileStream::LoadFile(const char *name,vector<char>& v){
	fstream fs(name, ios::in | ios::binary);
	if(fs.is_open()){
		v.resize(0);
		fs.seekg(0, ios::end);
		streampos ps = fs.tellg();
		fs.seekg(0, ios::beg);
		v.resize((unsigned int)ps.seekpos()+sizeof(char));
		fs.read((char*)&v[0],ps);
		fs.close();
		return true;
	}
	else{
		return false;
	}
}

bool FileStream::SaveFile(const char *name,vector<char> &v,size_t size){
	fstream fs(name, ios::out | ios::binary);
	if(!fs.is_open()){
		return false;
	}
	if(size){
		fs.write((char*)&v[0],size);
	}
	else{
		fs.write((char*)&v[0],v.size());
	}
	fs.close();
	return true;
}
